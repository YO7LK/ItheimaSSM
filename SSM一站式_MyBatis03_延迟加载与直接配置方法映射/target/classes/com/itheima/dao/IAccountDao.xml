<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IAccountDao">

    <!-- 定义封装account和user的resultMap -->
    <resultMap id="accountUserMap" type="account">
        <id property="id" column="id"></id>
        <result property="uid" column="uid"></result>
        <result property="money" column="money"></result>
        <!-- 一对一的关系映射：配置封装user的内容
        select属性指定的内容：查询用户的唯一标识（即要执行的查询用户列表的查询语句）
        column属性指定的内容：用户根据id查询时，所需要的参数的值
        ofType属性指定的内容：查询返回的用户信息对应的实体类
        JavaType是用来指定pojo中属性的类型，而ofType指定的是映射到list集合属性中pojo的类型！
        -->
        <association property="user" javaType="user"
                     select="com.itheima.dao.IUserDao.findById"
                     column="uid">
        </association>
    </resultMap>

    <!-- 查询所有 -->
    <select id="findAll" resultMap="accountUserMap">
        select * from account
    </select>

    <!-- 根据用户id查询账户列表 -->
    <select id="findAccountByUid" resultType="account" parameterType="int">
        select * from account where uid = #{uid}
    </select>

</mapper>